# =============================================================================
# Crypto AI Trading System - 环境配置模板
# =============================================================================
# 使用方法：
# 1. 复制此文件为 .env：cp .env.example .env
# 2. 根据实际环境修改配置值
# 3. 确保 .env 文件不提交到版本控制系统

# =============================================================================
# 基础应用配置
# =============================================================================
APP_NAME=Crypto AI Trading System
VERSION=0.1.0
ENVIRONMENT=development
DEBUG=false
LOG_LEVEL=INFO
SECRET_KEY=your-super-secret-key-change-in-production-please-use-strong-key

# 服务器配置
HOST=0.0.0.0
PORT=8000

# CORS配置
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# =============================================================================
# 数据库配置
# =============================================================================
DATABASE_URL=postgresql+asyncpg://crypto_trading:your_secure_password@localhost:5432/crypto_trading_db
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20

# PostgreSQL 配置优化（生产环境）
POSTGRES_SHARED_PRELOAD_LIBS=pg_stat_statements
POSTGRES_MAX_CONNECTIONS=200
POSTGRES_SHARED_PRELOAD_LIBRARIES=timescaledb

# =============================================================================
# Redis配置
# =============================================================================
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_DB=0
REDIS_MAX_CONNECTIONS=20

# =============================================================================
# LLM API配置
# =============================================================================
# OpenAI 配置
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_BASE_URL=https://api.openai.com/v1  # 可选：自定义OpenAI兼容端点
OPENAI_ORGANIZATION=your_organization_id          # 可选：组织ID
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=4096
OPENAI_TEMPERATURE=0.1
OPENAI_TIMEOUT=60
OPENAI_MAX_RETRIES=3

# OpenAI兼容端点示例（取消注释使用）：
# SiliconFlow:
# OPENAI_BASE_URL=https://api.siliconflow.cn/v1
# OPENAI_API_KEY=your_siliconflow_api_key

# DeepSeek:
# OPENAI_BASE_URL=https://api.deepseek.com/v1
# OPENAI_API_KEY=your_deepseek_api_key

# Azure OpenAI:
# OPENAI_BASE_URL=https://your-resource.openai.azure.com/openai/deployments/your-deployment
# OPENAI_API_KEY=your_azure_openai_key
# OPENAI_API_VERSION=2024-02-15-preview

# Anthropic 配置
ANTHROPIC_API_KEY=your_anthropic_api_key_here
ANTHROPIC_MODEL=claude-3-sonnet-20240229
ANTHROPIC_MAX_TOKENS=4096

# Google 配置（可选）
GOOGLE_API_KEY=your_google_api_key_here

# =============================================================================
# JWT认证配置
# =============================================================================
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# =============================================================================
# 交易所API配置
# =============================================================================
# Binance
BINANCE_API_KEY=your_binance_api_key
BINANCE_API_SECRET=your_binance_api_secret
BINANCE_TESTNET=false

# Coinbase Pro
COINBASE_API_KEY=your_coinbase_api_key
COINBASE_API_SECRET=your_coinbase_api_secret
COINBASE_API_PASSPHRASE=your_coinbase_passphrase

# Kraken
KRAKEN_API_KEY=your_kraken_api_key
KRAKEN_API_SECRET=your_kraken_api_secret

# Huobi（可选）
# HUOBI_API_KEY=your_huobi_api_key
# HUOBI_API_SECRET=your_huobi_api_secret

# OKEx（可选）
# OKEX_API_KEY=your_okex_api_key
# OKEX_API_SECRET=your_okex_api_secret

# =============================================================================
# 交易系统配置
# =============================================================================
TRADING_ENABLED=false
MAX_CONCURRENT_ANALYSIS=20
ANALYSIS_INTERVAL_MINUTES=1
DEFAULT_RISK_LEVEL=medium
MAX_POSITION_SIZE_PERCENT=0.25

# =============================================================================
# 任务队列配置
# =============================================================================
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/2
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json
CELERY_ACCEPT_CONTENT=["json"]
CELERY_TIMEZONE=UTC

# =============================================================================
# 监控配置
# =============================================================================
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090
PROMETHEUS_METRICS_PATH=/metrics

# Grafana配置（可选）
GRAFANA_PORT=3000
GRAFANA_ADMIN_PASSWORD=your_grafana_password

# =============================================================================
# 告警配置
# =============================================================================
# 邮件告警
ALERT_EMAIL_ENABLED=false
ALERT_EMAIL_SMTP_HOST=smtp.gmail.com
ALERT_EMAIL_SMTP_PORT=587
ALERT_EMAIL_USERNAME=your_email@gmail.com
ALERT_EMAIL_PASSWORD=your_email_password
ALERT_EMAIL_TO=admin@yourcompany.com
ALERT_EMAIL_FROM=system@yourcompany.com

# Slack告警（可选）
SLACK_WEBHOOK_ENABLED=false
SLACK_WEBHOOK_URL=your_slack_webhook_url
SLACK_CHANNEL=#trading-alerts

# 短信告警（可选）
SMS_ALERT_ENABLED=false
SMS_API_KEY=your_sms_api_key
SMS_PHONE_NUMBER=+1234567890

# =============================================================================
# 性能配置
# =============================================================================
# API限流配置
API_RATE_LIMIT=1000  # 每分钟请求数
API_RATE_WINDOW=60    # 窗口时间（秒）

# 缓存配置
CACHE_TTL=300        # 默认缓存时间（秒）
CACHE_MAX_SIZE=1000  # 最大缓存条目数

# 连接池配置
MAX_CONNECTIONS_PER_HOST=50
CONNECTION_TIMEOUT=30
READ_TIMEOUT=30
WRITE_TIMEOUT=30

# =============================================================================
# 日志配置
# =============================================================================
LOG_FILE_PATH=./logs
LOG_MAX_SIZE=100MB
LOG_BACKUP_COUNT=5
LOG_ROTATION=daily

# 日志级别（可选，覆盖DEBUG设置）
# OPENAI_LOG_LEVEL=DEBUG
# TRADING_LOG_LEVEL=INFO
# API_LOG_LEVEL=INFO

# =============================================================================
# 安全配置
# =============================================================================
# API密钥轮换
API_KEY_ROTATION_ENABLED=false
API_KEY_ROTATION_INTERVAL=86400  # 24小时

# IP白名单
IP_WHITELIST_ENABLED=true
IP_WHITELIST=127.0.0.1,::1

# 安全头
SECURITY_HEADERS_ENABLED=true
CORS_ENABLED=true
HTTPS_ONLY=false  # 生产环境建议设为true

# =============================================================================
# 开发配置
# =============================================================================
# 自动重载（开发环境）
AUTO_RELOAD=false

# 调试模式
DEBUG_SQL=false
DEBUG_REQUESTS=false

# 测试数据（开发环境）
LOAD_TEST_DATA=true
MOCK_EXTERNAL_APIS=false

# =============================================================================
# 生产环境特定配置
# =============================================================================
# 仅在生产环境启用以下配置
# WORKERS=4
# MEMORY_LIMIT=2Gi
# CPU_LIMIT=1000m
# DISK_LIMIT=10Gi

# 备份配置
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *  # 每天凌晨2点
BACKUP_RETENTION_DAYS=30

# 健康检查
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=5

# 优雅关闭
GRACEFUL_SHUTDOWN_TIMEOUT=30

# =============================================================================
# 开发工具配置
# =============================================================================
# 数据库迁移
ALEMBIC_CONFIG_FILE=alembic.ini
ALEMBIC_MIGRATIONS_DIR=migrations

# 代码质量检查
PYLINT_ENABLED=false
BLACK_ENABLED=false
ISORT_ENABLED=false
MYPYTHON_ENABLED=false

# 测试配置
TEST_DATABASE_URL=postgresql+asyncpg://test_user:test_password@localhost:5432/crypto_trading_test
TEST_REDIS_URL=redis://localhost:6379/1

# =============================================================================
# Docker配置（可选）
# =============================================================================
# 如果使用Docker，以下配置会被Docker环境变量覆盖
# POSTGRES_DB=crypto_trading_db
# POSTGRES_USER=crypto_trading
# POSTGRES_PASSWORD=your_secure_password
# REDIS_PASSWORD=your_redis_password

# =============================================================================
# 环境特定配置
# =============================================================================
# 开发环境配置
if [ "$ENVIRONMENT" = "development" ]; then
    DEBUG=true
    LOG_LEVEL=DEBUG
    AUTO_RELOAD=true
    TRADING_ENABLED=false
    PROMETHEUS_ENABLED=false
fi

# 测试环境配置
if [ "$ENVIRONMENT" = "testing" ]; then
    DEBUG=false
    LOG_LEVEL=WARNING
    TRADING_ENABLED=false
    CELERY_ALWAYS_EAGER=true
    PROMETHEUS_ENABLED=false
fi

# 生产环境配置
if [ "$ENVIRONMENT" = "production" ]; then
    DEBUG=false
    LOG_LEVEL=WARNING
    HTTPS_ONLY=true
    API_KEY_ROTATION_ENABLED=true
    BACKUP_ENABLED=true
    PROMETHEUS_ENABLED=true
    WORKERS=4
fi

# =============================================================================
# 配置验证
# =============================================================================
# 使用配置验证脚本检查配置：
# python backend/scripts/validate_openai_config.py

# 验证必要配置
required_configs=(
    "SECRET_KEY"
    "DATABASE_URL"
    "REDIS_URL"
)

# 生成配置摘要
echo "=============================================="
echo "Crypto AI Trading System 配置"
echo "=============================================="
echo "环境: $ENVIRONMENT"
echo "数据库: $DATABASE_URL"
echo "缓存: $REDIS_URL"
echo "LLM提供商: OpenAI"
echo "交易所配置: Binance, Coinbase, Kraken"
echo "=============================================="

# 配置完成提示
echo ""
echo "✅ 配置模板已准备就绪"
echo "📝 请根据实际环境修改 .env 文件中的配置值"
echo "🔒 确保 .env 文件不要提交到版本控制系统"
echo "🚀 使用配置验证脚本检查配置: python backend/scripts/validate_openai_config.py"
echo ""